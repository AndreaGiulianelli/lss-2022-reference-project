name: my first workflow attempt

'on':
  push:
  workflow_dispatch:

jobs:
  my-job:
    needs:
      - another-job
    env:
      pluto: 'paperino'
    runs-on: ubuntu-latest
    steps:
      - run: |
          pluto=pippo
          echo "I'm" $pluto running on ${{ runner.os == 'Linux' }}
          echo ${{ env.pluto }}
        name: "Print the $pluto OS name: ${{ runner.os }}"
      - name: Install tree
        run: |
          sudo apt-get update
          sudo apt-get install -y tree
      - name: Check out repository code
        uses: actions/checkout@v3
      - name: Watch the tree
        run: tree -a
      - name: Print the other random
        run: echo ${{ needs.another-job.outputs.random }}
  another-job:
    runs-on: windows-latest
    outputs:
      random: ${{ steps.randomgen.outputs.random }}
    steps:
      - shell: bash
        name: Print the OS name
        run: |
          echo this is
          echo a multiline run step
          echo running on ${{ runner.os }}
      - run: echo end
      - shell: bash
        name: compute a random number
        id: randomgen
        run: |
          ruby -e 'puts "::set-output name=random::#{rand(11..19)}"'
      - shell: bash
        name: print the previous random
        if: steps.randomgen.outputs.random > 3
        env:
          MY_RANDOM: ${{ steps.randomgen.outputs.random }}
        run: |
          echo ${{ steps.randomgen.outputs.random }}
          echo from variable: $MY_RANDOM
  gen-matrix-line:
    runs-on: ubuntu-latest
    needs:
      - another-job
    outputs:
      vars: ${{ steps.omg.outputs.list }}
    steps:
      - run: |
          ruby -e 'puts "::set-output name=list::#{(11..${{ needs.another-job.outputs.random }}).to_a.to_s}"'
        id: omg
  build:
    needs:
      - gen-matrix-line
    strategy:
      matrix:
        os: [ubuntu, macos, windows]
        java-version: ${{ fromJson(needs.gen-matrix-line.outputs.vars) }}
        java-distributor: [temurin, zulu]
        exclude:
          - java-version: 12
            java-distributor: temurin
          - java-version: 13
            java-distributor: temurin
          - java-version: 14
            java-distributor: temurin
          - java-version: 15
            java-distributor: temurin
        include:
          - java-distributor: microsoft
            java-version: 17
            os: ubuntu
    runs-on: ${{ matrix.os }}-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
        with:
          submodules: recursive
          fetch-depth: 0
      - uses: actions/setup-java@v3
        with:
          distribution: ${{ matrix.java-distributor }}
          java-version: ${{ matrix.java-version }}
      - env:
          ORG_GRADLE_PROJECT_signingKey: ${{ secrets.SIGNING_KEY }}
          ORG_GRADLE_PROJECT_signingPassword: ${{ secrets.SIGNING_PASSWORD }}
        run: |
          true || ./gradlew build --parallel || ./gradlew build --parallel || ./gradlew build --parallel
  build-image:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
        with:
          submodules: recursive
          fetch-depth: 0
      - run: docker build . -t lss-test:latest
      - run: docker run --rm lss-test:latest
  release:
    needs:
      - build-image
      - build
    runs-on: ubuntu-latest
    concurrency:
      group: release
      cancel-in-progress: false
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
        with:
          submodules: recursive
          fetch-depth: 0
      - name: Release
        run: |
          npm install
          npx semantic-release
